name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Firebase
      GOOGLE_TYPE: ${{ secrets.GOOGLE_TYPE }}
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      GOOGLE_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_PRIVATE_KEY_ID }}
      GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
      GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_AUTH_URI: ${{ secrets.GOOGLE_AUTH_URI }}
      GOOGLE_TOKEN_URI: ${{ secrets.GOOGLE_TOKEN_URI }}
      GOOGLE_AUTH_PROVIDER_CERT_URL: ${{ secrets.GOOGLE_AUTH_PROVIDER_CERT_URL }}
      GOOGLE_CLIENT_CERT_URL: ${{ secrets.GOOGLE_CLIENT_CERT_URL }}
      GOOGLE_UNIVERSE_DOMAIN: ${{ secrets.GOOGLE_UNIVERSE_DOMAIN }}

      # Stripe
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLIC_KEY }}

      # SMTP
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_TO: ${{ secrets.SMTP_TO }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 22 62.72.35.235 >> ~/.ssh/known_hosts

      - name: Deploy code to VPS
        run: |
          ssh -i ~/.ssh/id_rsa -p 22 root@62.72.35.235 << 'EOF'
            cd /root/Dimondra
            export GOOGLE_TYPE="${GOOGLE_TYPE}"
            export GOOGLE_PROJECT_ID="${GOOGLE_PROJECT_ID}"
            export GOOGLE_PRIVATE_KEY_ID="${GOOGLE_PRIVATE_KEY_ID}"
            export GOOGLE_PRIVATE_KEY="${GOOGLE_PRIVATE_KEY}"
            export GOOGLE_CLIENT_EMAIL="${GOOGLE_CLIENT_EMAIL}"
            export GOOGLE_CLIENT_ID="${GOOGLE_CLIENT_ID}"
            export GOOGLE_AUTH_URI="${GOOGLE_AUTH_URI}"
            export GOOGLE_TOKEN_URI="${GOOGLE_TOKEN_URI}"
            export GOOGLE_AUTH_PROVIDER_CERT_URL="${GOOGLE_AUTH_PROVIDER_CERT_URL}"
            export GOOGLE_CLIENT_CERT_URL="${GOOGLE_CLIENT_CERT_URL}"
            export GOOGLE_UNIVERSE_DOMAIN="${GOOGLE_UNIVERSE_DOMAIN}"
            export STRIPE_SECRET_KEY="${STRIPE_SECRET_KEY}"
            export NEXT_PUBLIC_STRIPE_PUBLIC_KEY="${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}"
            export STRIPE_WEBHOOK_SECRET="${STRIPE_WEBHOOK_SECRET}"
            export SMTP_USER="${SMTP_USER}"
            export SMTP_PASS="${SMTP_PASS}"
            export SMTP_HOST="${SMTP_HOST}"
            export SMTP_PORT="${SMTP_PORT}"
            export SMTP_TO="${SMTP_TO}"

            git pull origin main
            npm install --legacy-peer-deps
            npm run build
            pm2 restart nextjs-app || pm2 start npm --name "nextjs-app" -- run start
          EOF
